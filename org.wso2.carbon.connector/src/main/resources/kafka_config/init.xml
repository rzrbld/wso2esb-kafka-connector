<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 *  Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 -->

<template xmlns="http://ws.apache.org/ns/synapse" name="init">
    <parameter name="brokerList" description="The format is host1:port1,host2:port2"/>
    <parameter name="serializationClass"
               description="The serializer class for messages. The default encoder takes a byte and returns the same byte"/>
    <parameter name="requiredAck" description="This value controls when a produce request is considered completed"/>
    <parameter name="producerType"
               description="This parameter specifies whether the messages are sent asynchronously or synchronously"/>
    <parameter name="keySerializerClass" description=" The serializer class for keys"/>
    <parameter name="partitionClass" description="The class for partitioning messages amongst sub-topics"/>
    <parameter name="compressionCodec"
               description="This parameter allows you to specify the compression codec for all data generated by this producer"/>
    <parameter name="compressedTopics"
               description="This parameter allows you to set whether compression should be turned on for particular topics"/>
    <parameter name="messageSendMaxRetries"
               description="This property will cause the producer to automatically retry a failed send request"/>
    <parameter name="retryBackOff"
               description="This property specifies the amount of time that the producer waits before refreshing the metadata."/>
    <parameter name="refreshInterval"
               description="The producer generally refreshes the topic metadata from brokers when there is a failure. It will also poll regularly"/>
    <parameter name="bufferingMaxMessages"
               description="The maximum number of unsent messages that can be queued up the producer when using async mode"/>
    <parameter name="batchNoMessages" description="The number of messages to send in one batch when using async mode"/>
    <parameter name="sendBufferSize" description="Socket write buffer size"/>
    <parameter name="requestTimeout" description="The amount of time the broker will wait trying to meet the request"/>
    <paramter name="bufferingMaxTime" description="Maximum time to buffer data when using async mode."/>
    <parameter name="enqueueTimeout"
               description="The amount of time to block before dropping messages when running in async mode and the buffer has reached queue.buffering.max.messages"/>
    <parameter name="clientId"
               description="The client id is a user-specified string sent in each request to help trace calls."/>
    <sequence>
        <property expression="$func:brokerList" name="kafka.brokerList"
                  scope="operation" type="STRING"/>
        <property expression="$func:requiredAck" name="kafka.requiredAck"/>
        <property expression="$func:requestTimeout" name="kafka.requestTimeout"/>
        <property expression="$func:producerType" name="kafka.producerType"/>
        <property expression="$func:serializationClass" name="kafka.serializationClass"/>
        <property expression="$func:keySerializerClass" name="kafka.keySerializerClass"/>
        <property expression="$func:partitionClass" name="kafka.partitionClass"/>
        <property expression="$func:compressionCodec" name="kafka.compressionCodec"/>
        <property expression="$func:compressedTopics" name="kafka.compressedTopics"/>
        <property expression="$func:messageSendMaxRetries" name="kafka.messageSendMaxRetries"/>
        <property expression="$func:retryBackOff" name="kafka.retryBackOff"/>
        <property expression="$func:refreshInterval" name="kafka.refreshInterval"/>
        <property expression="$func:bufferingMaxMessages" name="kafka.bufferingMaxMessages"/>
        <property expression="$func:batchNoMessages" name="kafka.batchNoMessages"/>
        <property expression="$func:sendBufferSize" name="kafka.sendBufferSize"/>
        <property expression="$func:requestTimeout" name="kafka.requestTimeout"/>
        <property expression="$func:bufferingMaxTime" name="kafka.bufferingMaxTime"/>
        <property expression="$func:enqueueTimeout" name="kafka.enqueueTimeout"/>
        <property expression="$func:clientId" name="kafka.clientId"/>

        <class name="org.wso2.carbon.connector.KafkaConfig"/>
    </sequence>
</template>